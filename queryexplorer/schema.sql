DROP TABLE IF EXISTS queries;
CREATE TABLE queries (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    text TEXT NOT NULL,
    time REAL,
    autogenerated INTEGER,
    class TEXT,
    commands_indicator_group_id INTEGER,
    user_id INTEGER REFERENCES users(id),
    session_id INTEGER REFERENCES sessions(id),
    CONSTRAINT issuing_user FOREIGN KEY (user_id) REFERENCES users(id),
    CONSTRAINT containing_session FOREIGN KEY (session_id) REFERENCES session(id)
);

DROP TABLE IF EXISTS users;
CREATE TABLE users (
    id INTEGER PRIMARY KEY AUTOINCREMENT, 
    name TEXT
);

DROP TABLE IF EXISTS sessions;
CREATE TABLE sessions (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER REFERENCES users(id),
    type TEXT,
    CONSTRAINT owner FOREIGN KEY (user_id) REFERENCES users(id)
);

DROP TABLE IF EXISTS commands_indicators;
CREATE TABLE commands_indicators (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    indicator_vector TEXT NOT NULL,
    query_id INTEGER REFERENCES queries(id),
    CONSTRAINT corresponding_query FOREIGN KEY (query_id) REFERENCES queries(id)
);

DROP TABLE IF EXISTS commands_indicator_key;
CREATE TABLE commands_indicator_key (
    command TEXT PRIMARY KEY,
    idx INTEGER NOT NULL
);

DROP TABLE IF EXISTS commands_indicator_coordinates;
CREATE TABLE commands_indicator_coordinates (
    rowidx INTEGER NOT NULL,
    colidx INTEGER NOT NULL,
    command TEXT,
    hash TEXT UNIQUE,
    class TEXT,
    indicator_group_id INTEGER
);

DROP TABLE IF EXISTS commands_semantic_group_key (
    id INTEGER PRIMARY KEY,
    command TEXT,
    filters_rows INTEGER,
    filters_cols INTEGER,
    adds_cols INTEGER,
    adds_rows INTEGER,
    transforms_entries INTEGER,
    transforms_cols INTEGER,
    transforms_rows INTEGER,
    metacommand INTEGER,
);
